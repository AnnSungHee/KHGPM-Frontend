{"ast":null,"code":"export default {\n  name: \"TdComponent\",\n  data() {\n    return {\n      game: {\n        propsTurnShape: this.currentTurnShape\n      }\n    };\n  },\n  props: {\n    cellData: String,\n    cellIndex: Number,\n    rowIndex: Number,\n    tableData: Array,\n    currentTurnShape: String\n  },\n  methods: {\n    whichOneSelected() {\n      console.log('오목판을 클릭했습니다!');\n      this.setDataToSelectedArray();\n      let win = this.winnerCheck();\n      if (win) {\n        this.game.propsWinner = this.currentTurnShape;\n        this.$emit('updateWinner');\n      }\n      this.changeTurn();\n    },\n    changeTurn() {\n      this.game.propsTurnShape = this.currentTurnShape === 'O' ? 'X' : 'O';\n      // this.$emit('이벤트명', 값(옵션))\n      this.$emit('updateTurnShape', this.game.propsTurnShape);\n    },\n    setDataToSelectedArray() {\n      // this.tableData[this.rowIndex]: 사용자가 클릭한 행 정보\n      // this.cellIndex: 사용자가 클릭한 '행'내 열 정보\n      // this.currentTurnShape: 현재 턴('x', 'o')\n      // this.$set(행, 열, 값) -> 특정[행][열] = 값\n      this.$set(this.tableData[this.rowIndex], this.cellIndex, this.currentTurnShape);\n    },\n    winnerCheck() {\n      if (this.tableData[this.rowIndex][0] === this.currentTurnShape && this.tableData[this.rowIndex][1] === this.currentTurnShape && this.tableData[this.rowIndex][2] === this.currentTurnShape && this.tableData[this.rowIndex][3] === this.currentTurnShape && this.tableData[this.rowIndex][4] === this.currentTurnShape) {\n        return true;\n      } else if (this.tableData[0][this.cellIndex] === this.currentTurnShape && this.tableData[1][this.cellIndex] === this.currentTurnShape && this.tableData[2][this.cellIndex] === this.currentTurnShape && this.tableData[3][this.cellIndex] === this.currentTurnShape && this.tableData[4][this.cellIndex] === this.currentTurnShape) {\n        return true;\n      } else if (this.tableData[0][0] === this.currentTurnShape && this.tableData[1][1] === this.currentTurnShape && this.tableData[2][2] === this.currentTurnShape && this.tableData[3][3] === this.currentTurnShape && this.tableData[4][4] === this.currentTurnShape) {\n        return true;\n      } else if (this.tableData[0][4] === this.currentTurnShape && this.tableData[1][3] === this.currentTurnShape && this.tableData[2][2] === this.currentTurnShape && this.tableData[3][1] === this.currentTurnShape && this.tableData[4][0] === this.currentTurnShape) {\n        return true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","game","propsTurnShape","currentTurnShape","props","cellData","String","cellIndex","Number","rowIndex","tableData","Array","methods","whichOneSelected","console","log","setDataToSelectedArray","win","winnerCheck","propsWinner","$emit","changeTurn","$set"],"sources":["src/components/lecture/emitTest/TdComponent.vue"],"sourcesContent":["<template>\n  <td @click=\"whichOneSelected\" style=\"width: 30px; height: 30px\">\n    {{ cellData }}\n  </td>\n</template>\n\n<script>\n\nexport default {\n    name: \"TdComponent\",\n    data () {\n        return {\n            game: {\n                propsTurnShape: this.currentTurnShape,\n            }\n        }\n    },\n    props: {\n        cellData: String,\n        cellIndex: Number,\n        rowIndex: Number,\n        tableData: Array,\n        currentTurnShape: String,\n    },\n    methods: {\n        whichOneSelected () {\n            console.log('오목판을 클릭했습니다!')\n\n            this.setDataToSelectedArray()\n            let win = this.winnerCheck()\n            \n            if (win) {\n                this.game.propsWinner = this.currentTurnShape\n\n                this.$emit('updateWinner')\n            }\n\n            this.changeTurn()\n            \n        },\n        changeTurn () {\n            this.game.propsTurnShape = this.currentTurnShape === 'O' ? 'X' : 'O'\n            // this.$emit('이벤트명', 값(옵션))\n            this.$emit('updateTurnShape', this.game.propsTurnShape)\n        },\n        setDataToSelectedArray () {\n            // this.tableData[this.rowIndex]: 사용자가 클릭한 행 정보\n            // this.cellIndex: 사용자가 클릭한 '행'내 열 정보\n            // this.currentTurnShape: 현재 턴('x', 'o')\n            // this.$set(행, 열, 값) -> 특정[행][열] = 값\n            this.$set(this.tableData[this.rowIndex], this.cellIndex, this.currentTurnShape)\n        },\n        winnerCheck () {\n            if (\n                this.tableData[this.rowIndex][0] === this.currentTurnShape &&\n                this.tableData[this.rowIndex][1] === this.currentTurnShape &&\n                this.tableData[this.rowIndex][2] === this.currentTurnShape &&\n                this.tableData[this.rowIndex][3] === this.currentTurnShape &&\n                this.tableData[this.rowIndex][4] === this.currentTurnShape \n            ) {\n                return true\n            } else if (\n                this.tableData[0][this.cellIndex] === this.currentTurnShape &&\n                this.tableData[1][this.cellIndex] === this.currentTurnShape &&\n                this.tableData[2][this.cellIndex] === this.currentTurnShape &&\n                this.tableData[3][this.cellIndex] === this.currentTurnShape &&\n                this.tableData[4][this.cellIndex] === this.currentTurnShape \n            ) {\n                return true\n            } else if (\n                this.tableData[0][0] === this.currentTurnShape &&\n                this.tableData[1][1] === this.currentTurnShape &&\n                this.tableData[2][2] === this.currentTurnShape &&\n                this.tableData[3][3] === this.currentTurnShape &&\n                this.tableData[4][4] === this.currentTurnShape\n            ) {\n                return true\n            } else if (\n                this.tableData[0][4] === this.currentTurnShape &&\n                this.tableData[1][3] === this.currentTurnShape &&\n                this.tableData[2][2] === this.currentTurnShape &&\n                this.tableData[3][1] === this.currentTurnShape &&\n                this.tableData[4][0] === this.currentTurnShape \n            ) {\n                return true\n            }\n        }\n    }\n}\n\n</script>\n\n<style>\n\n</style>"],"mappings":"AAQA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,cAAA,OAAAC;MACA;IACA;EACA;EACAC,KAAA;IACAC,QAAA,EAAAC,MAAA;IACAC,SAAA,EAAAC,MAAA;IACAC,QAAA,EAAAD,MAAA;IACAE,SAAA,EAAAC,KAAA;IACAR,gBAAA,EAAAG;EACA;EACAM,OAAA;IACAC,iBAAA;MACAC,OAAA,CAAAC,GAAA;MAEA,KAAAC,sBAAA;MACA,IAAAC,GAAA,QAAAC,WAAA;MAEA,IAAAD,GAAA;QACA,KAAAhB,IAAA,CAAAkB,WAAA,QAAAhB,gBAAA;QAEA,KAAAiB,KAAA;MACA;MAEA,KAAAC,UAAA;IAEA;IACAA,WAAA;MACA,KAAApB,IAAA,CAAAC,cAAA,QAAAC,gBAAA;MACA;MACA,KAAAiB,KAAA,yBAAAnB,IAAA,CAAAC,cAAA;IACA;IACAc,uBAAA;MACA;MACA;MACA;MACA;MACA,KAAAM,IAAA,MAAAZ,SAAA,MAAAD,QAAA,QAAAF,SAAA,OAAAJ,gBAAA;IACA;IACAe,YAAA;MACA,IACA,KAAAR,SAAA,MAAAD,QAAA,cAAAN,gBAAA,IACA,KAAAO,SAAA,MAAAD,QAAA,cAAAN,gBAAA,IACA,KAAAO,SAAA,MAAAD,QAAA,cAAAN,gBAAA,IACA,KAAAO,SAAA,MAAAD,QAAA,cAAAN,gBAAA,IACA,KAAAO,SAAA,MAAAD,QAAA,cAAAN,gBAAA,EACA;QACA;MACA,WACA,KAAAO,SAAA,SAAAH,SAAA,WAAAJ,gBAAA,IACA,KAAAO,SAAA,SAAAH,SAAA,WAAAJ,gBAAA,IACA,KAAAO,SAAA,SAAAH,SAAA,WAAAJ,gBAAA,IACA,KAAAO,SAAA,SAAAH,SAAA,WAAAJ,gBAAA,IACA,KAAAO,SAAA,SAAAH,SAAA,WAAAJ,gBAAA,EACA;QACA;MACA,WACA,KAAAO,SAAA,gBAAAP,gBAAA,IACA,KAAAO,SAAA,gBAAAP,gBAAA,IACA,KAAAO,SAAA,gBAAAP,gBAAA,IACA,KAAAO,SAAA,gBAAAP,gBAAA,IACA,KAAAO,SAAA,gBAAAP,gBAAA,EACA;QACA;MACA,WACA,KAAAO,SAAA,gBAAAP,gBAAA,IACA,KAAAO,SAAA,gBAAAP,gBAAA,IACA,KAAAO,SAAA,gBAAAP,gBAAA,IACA,KAAAO,SAAA,gBAAAP,gBAAA,IACA,KAAAO,SAAA,gBAAAP,gBAAA,EACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}